{% extends "_layouts/cp" %}
{% set centered = true %}

{% set title = "Blueprint"|t %}


{% macro table3col(data, url) %}

    <table class="data fullwidth collapsible">
      <thead>
        <th scope="col">{{ "Name"|t }}</th>
        <th scope="col">{{ "Type"|t }}</th>
        <th scope="col">{{ "Handle"|t }}</th>
      </thead>


      <tbody>

      {% for key, values in data | group('name') %}
        {% set first = values[0] %}
        <tr class="first level tint">
          <th scope="row" width="25%"><a href="{{ url(url ~ first.id) }}">{{ key|t }}</a> <span class="items-num">{{ values|length }} {{ 'field(s)'|t }}</span></th>
          <td width="35%">{% if first.type is defined %}{{ first.type }}{% endif %}</td>
          <td width="40%">{% if first.handle is defined %}{{ first.handle }}{% endif %}</td>
        </tr>

        {% for field in values %}
          <tr class="compact fields second level searchable">
              <td class="name"><a href="{{ url('settings/fields/edit/' ~ field.fId) }}">{{ field.fName }}</a></td>
              <td>{{ field.fType }}</td>
              <td class="code">{{ field.fHandle }}</td>
          </tr>
        {% endfor %}
      {% endfor %}

      </tbody>
    </table>

{% endmacro %}

{% import _self as macros %}


{% set sidebar %}
<h2>{{ 'Filter'|t }}</h2>
<input type="search" id="bp-search" placeholder="{{ 'Search'|t }}">

<nav class="bp-nav">
  <ul data-level="1">
    <li class="heading"><span>{{ 'Show'|t }}</span></li>
    <li><a href="#all" class="bp-showall"><span class="checkmark"><span class="mark"></span></span>{{ 'All'|t }}</a></li>
    <li><a href="#sections-structure"><span class="checkmark"><span class="mark"></span></span>{{ 'Structures'|t }}</a></li>
    <li><a href="#sections-channel"><span class="checkmark"><span class="mark"></span></span>{{ 'Channels'|t }}</a></li>
    <li><a href="#sections-single"><span class="checkmark"><span class="mark"></span></span>{{ 'Singles'|t }}</a></li>
    <li><a href="#globalsets"><span class="checkmark"><span class="mark"></span></span>{{ 'Global Sets'|t }}</a></li>
    <li><a href="#assetsources"><span class="checkmark"><span class="mark"></span></span>{{ 'Asset Sources'|t }}</a></li>
    <li><a href="#assettransforms"><span class="checkmark"><span class="mark"></span></span>{{ 'Asset Transforms'|t }}</a></li>
    <li><a href="#categorygroups"><span class="checkmark"><span class="mark"></span></span>{{ 'Category Groups'|t }}</a></li>
    <li><a href="#taggroups"><span class="checkmark"><span class="mark"></span></span>{{ 'Tag Groups'|t }}</a></li>
  </ul>
</nav>

<div class="small-info">
  Shift-Click: scroll to section<br>
  Alt-Click: show this/hide others
</div>

{% endset %}


{% set content %}

<div class="blueprint" id="all">

  <div id="sections">

      {% for sectionType, sections in bp.sections | group('type') %}

      <section id="sections-{{ sectionType }}">

      <h2>{{ 'Sections'|t }} / {{ sectionType }}s <span class="number"></span></h2>


      <table id="sets" class="data fullwidth collapsible">
        <thead>
          <th scope="col" width="25%">{{ "Name"|t }}</th>
          <th scope="col" width="15%">{{ "Type"|t }}</th>
          <th scope="col" width="20%">{{ "Handle"|t }}</th>
          <th scope="col" width="40%">{{ "Twig Variable"|t }}</th>
        </thead>

        <tbody>

        {% for sectionName, sectionsByName in sections | group('name') %}

        <tr class="first level tint">
          <th scope="row"><a href="{{ url('settings/sections/' ~ sectionsByName[0].id) }}">{{ sectionName }}</a></th>
          <td>{{ sectionType }}</td>
          <td class="code">{{ sectionsByName[0].handle }}</td>
          <td> </td>
        </tr>

          {% for sectionEntryType, sectionsByEntryType in sectionsByName | group('etName') %}

            <tr class="second level compact">
              <td class="name"><strong><a href="{{ url('settings/sections/' ~ sectionsByName[0].id ~ '/entrytypes/' ~ sectionsByEntryType[0].etId) }}">{{ sectionEntryType }}</a></strong> <span class="items-num">{{ sectionsByEntryType|length }} {{ 'field(s)'|t }}</span></td>
              <td>{{ 'Entry Type'|t }}</td>
              <td class="code">{{ sectionsByEntryType[0].etHandle }}</td>
              <td> </td>
            </tr>

            {% for field in sectionsByEntryType %}

              <tr class="compact fields third level searchable">
                  <td class="name">
                    <a href="{{ url('settings/fields/edit/' ~ field.fId) }}">{{ field.fName }}</a>
                  </td>

                  <td>
                    {{ field.fType }}
                  </td>

                  <td class="code">
                    {{ field.fHandle }}
                  </td>

                  <td class="code">
                    {{ field.handle }}.{{ field.fHandle }}
                  </td>

                </tr>

            {% endfor %}

          {% endfor %}
        {% endfor %}

      </tbody>
      </table>
    </section>

    {% endfor %}

</div>


</div>

{% endset %}


{% set myCss %}
    .compact td, .compact th { padding-top:1px !important; padding-bottom:1px !important; font-size: 90% }
    .tint th, .tint td { background-color: #fff;border-top: 1px solid gray !important;   }


    .second.level .name { padding-left: 20px !important }
    .third.level .name { padding-left: 40px !important }

    .first.level a { color: #333f4d }

    .blueprint section {padding-top: 20px; margin-bottom: 40px}
    .blueprint h2 {text-transform:capitalize; font-size: 16px; color: #da5a47}
    .blueprint .found td, .blueprint .found th { background-color: #ff8 }

    .bp-nav .hidden-target { color: gray !important}

    .small-info {
      font-size: 85%;
      color: #222;
      padding: 5px;
      background:rgb(255,255,200);
      margin:10px 0;
    }

    .items-num {
      display: inline-block;
      background-color: lightgray;
      color: white;
      border-radius: 10px;
      padding: 0px 4px;
      text-align:center;
      font-size: 80%;
      min-width: 10px;
      font-weight: normal;
    }

    .bp-nav .checkmark {
      display:block;
      float:left;
      width: 15px;
      margin-right:5px;
      background-color: #eee;
      background-colorx: rgb(0, 176, 7);

      border-radius: 10px;
      height: 10px;
      padding: 1px;
      border: 1px solid #ddd;

      box-shadow: rgba(0, 0, 0, 0.1) 0px 0px 2px inset;
    }

    .bp-nav .mark {
      display:block;
      width: 10px;
      margin-right:5px;
      background-color:rgb(0, 176, 7);
      border-radius: 10px;
      height: 10px;
      margin-left:5px;

      -webkit-transition: all 0.05s;
      transition: all 0.05s;
    }

    .bp-nav .hidden-target .mark {
        margin-left:0;
        background-color: #aaa;
    }
{% endset %}
{% includeCss myCss %}


{% set js %}

    $(function() {

    // INIT from stored settings
    var hidden = [];
    try { hidden = JSON.parse(localStorage.getItem('bp.hidden'));} catch(e) {}
    $(".bp-nav a").each(function() {
      var target = $(this).attr('href');
      if ($.inArray(target, hidden) > -1) {
        $(this).addClass('hidden-target');
        if (target !='#all') { $(target).hide(); }
      }
    });

    // SHOW section, respond to click
    $(".bp-nav a").click(function (e) {
      // var target = '#' + $(this).data('key');
      e.preventDefault();
      var target = $(this).attr('href');
      // SHIFT-CLICK scroll to target
      if (e.shiftKey) {

         $('body').animate({
            scrollTop: $(target).offset().top
        }, 300);

        return;
      }

      if (target == '#all') {
        $('.blueprint section').show();
        $('.bp-nav a').removeClass('hidden-target');
      }
      else {

        // ALT key is pressed - show this, hide others
        if (e.altKey) {
          $('.blueprint section').fadeOut('fast');
          $(target).fadeIn('fast');
          $('.bp-nav a').addClass('hidden-target');
          $(this).removeClass('hidden-target');
        }
        else {
          $(target).fadeToggle('fast');
          $(this).toggleClass('hidden-target');

          // change "all" too
          if ($(".bp-nav li:gt(1) a.hidden-target").length) {
            $('.bp-showall').addClass('hidden-target');
          }
          else {
            $('.bp-showall').removeClass('hidden-target');
          }
        }
      }

      // save current settings to localstorage
      var hidden = $('.bp-nav a.hidden-target').map( function (val,i) {
        return $(this).attr('href');
      }).get(); // use .get() to get array not $ objects
      try { localStorage.setItem('bp.hidden', JSON.stringify(hidden)); } catch (e) {}

    });

    // SEARCH field changed
    $('#bp-search').on('input', function() {
        filterTables($(this).val());
    });

    // TODO: make it smarter, display structured data?
    function filterTables(find) {

      if (!find.length) {
        $('.blueprint tr, .blueprint table').removeClass('found').show();
        $('.blueprint .number').text('');
        return;
      }

      $('.blueprint tr').each(function() {
        if ( $(this).text().toLowerCase().indexOf(find.toLowerCase()) == -1 ) {
          if ($(this).hasClass('searchable')) {
            $(this).hide();
          }
          $(this).removeClass('found');
        }
        else {
          $(this).show();
          $(this).addClass('found');
        }
      });


      $('.blueprint table').each(function() {
        var numberOfFound = $(this).find('.found').length;
        if (!numberOfFound ) {
          $(this).hide();
        }
        else {
          $(this).show();
        }

        $(this).parent().find('h2 .number').text('('+numberOfFound+')');

      });

    }

  });

{% endset %}
{% includeJs js %}
